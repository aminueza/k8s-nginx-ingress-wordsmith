apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: veriff-app
  labels:
    app: words-db
spec:
  ports:
    - name: db
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: words-db
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: db
  namespace: veriff-app
  labels:
    app: words-db
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        app: words-db
        run: words-db
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "words-db"
                  - key: "temporary"
                    operator: In
                    values:
                      - "true"
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      containers:
      - name: db
        image: dockersamples/k8s-wordsmith-db
        imagePullPolicy: Always
        # volumeMounts:
        #     - name: log
        #       mountPath: /opt/db/current/log
        #     - name: certs
        #       mountPath: /opt/db/current/certs
        ports:
        - containerPort: 5432
          name: db
        resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 0.1
              memory: 128Mi
        # envFrom:
        #   - configMapRef:
        #       name: db
        readinessProbe:
            httpGet:
              path: /status
              port: 80
            periodSeconds: 10
            failureThreshold: 2
            successThreshold: 2
    # volumes:
    #     - name: certs
    #       secret:
    #         secretName: db-tls
    #         items:
    #           - key: ppl.crt
    #             path: ppl.crt
    #           - key: ppl.key
    #             path: ppl.key
    #     - name: log
    #       emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: words
  namespace: veriff-app
  labels:
    app: words-api
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: api
      protocol: TCP
  selector:
    app: words-api
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: words
  namespace: veriff-app
  labels:
    app: words-api
spec:
  replicas: 5
  template:
    metadata:
      labels:
        app: words-api
    spec:
      containers:
      - name: words
        image: dockersamples/k8s-wordsmith-api
        ports:
        - containerPort: 8080
          name: api
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: veriff-app
  labels:
    app: words-web
spec:
  ports:
    - port: 80
      targetPort: 80
      name: web
  selector:
    app: words-web
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: web
  namespace: veriff-app
  labels:
    app: words-web
spec:
  template:
    metadata:
      labels:
        app: words-web
    spec:
      containers:
      - name: web
        image: dockersamples/k8s-wordsmith-web
        ports:
        - containerPort: 80
          name: words-web
# ---
# kind: NetworkPolicy
# apiVersion: networking.k8s.io/v1
# metadata:
#   name: access-bd
# spec:
#   podSelector:
#     matchLabels:
#       app: words
#   policyTypes:
#     - Egress
#     - Ingress
#   egress:
#     - ports:
#         - port: 53
#           protocol: UDP
#         - port: 53
#           protocol: TCP
#         - port: 443
#           protocol: TCP
#         - port: 80
#           protocol: TCP
#         - port: 8080
#           protocol: TCP
#         - port: 5432
#           protocol: TCP
#   ingress:
#     - ports:
#         - port: 80
#           protocol: TCP
#         - port: 8080
#           protocol: TCP
